# CONFIG_SITE

# Make any application-specific changes to the EPICS build
#   configuration variables in this file.
#
# Host/target specific settings can be specified in files named
#   CONFIG_SITE.$(EPICS_HOST_ARCH).Common
#   CONFIG_SITE.Common.$(T_A)
#   CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)

# CHECK_RELEASE controls the consistency checking of the support
#   applications pointed to by the RELEASE* files.
# Normally CHECK_RELEASE should be set to YES.
# Set CHECK_RELEASE to NO to disable checking completely.
# Set CHECK_RELEASE to WARN to perform consistency checking but
#   continue building even if conflicts are found.
CHECK_RELEASE = YES

# Set this when you only want to compile this application
#   for a subset of the cross-compiled target architectures
#   that Base is built for.
CROSS_COMPILER_TARGET_ARCHS = linuxRT-x86_64

# To install files into a location other than $(TOP) define
#   INSTALL_LOCATION here.
#INSTALL_LOCATION=</absolute/path/to/install/top>

# Set this when the IOC and build host use different paths
#   to the install location. This may be needed to boot from
#   a Microsoft FTP server say, or on some NFS configurations.
#IOCS_APPL_TOP = </IOC's/absolute/path/to/install/top>
#
# =======================================================
# Let's install our IOC boot products:
# envPaths and st.cmd
# =======================================================
INSTALL_LOCATION_STARTUP += $(INSTALL_LOCATION)/startup
DIRECTORY_TARGETS += $(INSTALL_LOCATION_STARTUP)

# =============================
# Build Application Statically
# =============================
SHARED_LIBRARIES=NO
STATIC_BUILD=YES

# =============================
# Define the archiecture versions
# =============================
LINUXRT_BUILDROOT_VERSION=buildroot-2019.08
LINUX_VERSION=rhel6


# ======================================================
# Linux Kernel Modules Top
# =====================================================
KERNEL_MOD_TOP=$(PACKAGE_SITE_TOP)/linuxKernel_Modules
# =====================================================

# =============================================================================================================
# Support for EVRMA Kernel Module (evrma.ko)
# =============================================================================================================
KERNEL_MODULE_EVRMA_PACKAGE_NAME=evrmaDriver
KERNEL_MODULE_EVRMA_VERSION=R1.0.9
KERNEL_MODULE_EVRMA_TOP=$(KERNEL_MOD_TOP)/$(KERNEL_MODULE_EVRMA_PACKAGE_NAME)/$(KERNEL_MODULE_EVRMA_VERSION)
KERNEL_MODULE_EVRMA_KO = $(KERNEL_MODULE_EVRMA_TOP)/$(PKG_ARCH)
KERNEL_MODULE_EVRMA_INCLUDE = $(KERNEL_MODULE_EVRMA_TOP)/$(PKG_ARCH)/include
# =============================================================================================================

# ===========================================================================
# Support for EVRMA
# ===========================================================================
EVRMA_PACKAGE_NAME=evrma
EVRMA_VERSION=R1.0.9
EVRMA_TOP=$(PACKAGE_SITE_TOP)/$(EVRMA_PACKAGE_NAME)/$(EVRMA_VERSION)
EVRMA_LIB = $(EVRMA_TOP)/$(PKG_ARCH)/lib
EVRMA_INCLUDE = $(EVRMA_TOP)/$(PKG_ARCH)/include
# ===========================================================================


# ===========================================================================
# Support for CPPUNIT
# ===========================================================================
CPPUNIT_PACKAGE_NAME=cppunit
CPPUNIT_VERSION=1.12.1
CPPUNIT_TOP=$(PACKAGE_SITE_TOP)/$(CPPUNIT_PACKAGE_NAME)/$(CPPUNIT_VERSION)
CPPUNIT_LIB = $(CPPUNIT_TOP)/$(PKG_ARCH)/lib
CPPUNIT_INCLUDE = $(CPPUNIT_TOP)/$(PKG_ARCH)/include
# ===========================================================================

# ===========================================================================
# Support for BOOST
# ===========================================================================
BOOST_PACKAGE_NAME=boost
BOOST_VERSION=1.63.0
BOOST_TOP=$(PACKAGE_SITE_TOP)/$(BOOST_PACKAGE_NAME)/$(BOOST_VERSION)
BOOST_LIB = $(BOOST_TOP)/$(PKG_ARCH)/lib
BOOST_INCLUDE = $(BOOST_TOP)/$(PKG_ARCH)/include
# ===========================================================================

# ============================================================================================
# Support for BOOST Numeric Bindings (Headers)
# ============================================================================================
BOOSTBINDINGS_PACKAGE_NAME=boost-numeric-bindings
BOOSTBINDINGS_VERSION=1.63.0
BOOSTBINDINGS_TOP=$(PACKAGE_SITE_TOP)/$(BOOSTBINDINGS_PACKAGE_NAME)/$(BOOSTBINDINGS_VERSION)
BOOSTBINDINGS_INCLUDE = $(BOOSTBINDINGS_TOP)/include
# ============================================================================================


# ===========================================================================
# Support for LAPACK
# ===========================================================================
LAPACK_PACKAGE_NAME=lapack
LAPACK_VERSION=3.2.1
LAPACK_TOP=$(PACKAGE_SITE_TOP)/$(LAPACK_PACKAGE_NAME)/$(LAPACK_VERSION)
LAPACK_LIB = $(LAPACK_TOP)/$(PKG_ARCH)/lib
LAPACK_INCLUDE = $(LAPACK_TOP)/$(PKG_ARCH)/include
# ===========================================================================

# ===========================================================================
# GNU Fortran support in Buildroot (linuxRT)
# ===========================================================================
# Define the location of the gfortran
# # So only need to define location of libs and headers
BUILDROOT_HOME=/afs/slac/package/linuxRT/buildroot-2019.08
STAGE_X86=$(BUILDROOT_HOME)/buildroot-2019.08-x86_64/output/staging
#
GFORT_LIB     = $(STAGE_X86)/usr/lib64
GFORT_INCLUDE = $(STAGE_X86)/usr/include
#
DL_LIB       = $(STAGE_X86)/usr/lib64
DL_INCLUDE   = $(STAGE_X86)/usr/include
#
QUADMATH_LIB       = $(STAGE_X86)/usr/lib64
QUADMATH_INCLUDE   = $(STAGE_X86)/usr/include
# ============================================================================

